{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Desktop\\\\Programming\\\\TOB-site\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { STORAGE_KEYS } from '../utils/constants';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  serverStatus: {\n    online: true,\n    playerCount: 0,\n    maxPlayers: 100\n  },\n  events: [],\n  changelogs: [],\n  loading: false,\n  error: null,\n  theme: 'dark',\n  notifications: []\n};\n\n// Action types\nexport const ACTION_TYPES = {\n  SET_USER: 'SET_USER',\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  SET_SERVER_STATUS: 'SET_SERVER_STATUS',\n  SET_EVENTS: 'SET_EVENTS',\n  SET_CHANGELOGS: 'SET_CHANGELOGS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_THEME: 'SET_THEME',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  LOGOUT: 'LOGOUT'\n};\n\n// Reducer function\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload\n      };\n    case ACTION_TYPES.SET_AUTHENTICATED:\n      return {\n        ...state,\n        isAuthenticated: action.payload\n      };\n    case ACTION_TYPES.SET_SERVER_STATUS:\n      return {\n        ...state,\n        serverStatus: {\n          ...state.serverStatus,\n          ...action.payload\n        }\n      };\n    case ACTION_TYPES.SET_EVENTS:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case ACTION_TYPES.SET_CHANGELOGS:\n      return {\n        ...state,\n        changelogs: action.payload\n      };\n    case ACTION_TYPES.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case ACTION_TYPES.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case ACTION_TYPES.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case ACTION_TYPES.SET_THEME:\n      return {\n        ...state,\n        theme: action.payload\n      };\n    case ACTION_TYPES.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload]\n      };\n    case ACTION_TYPES.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(notification => notification.id !== action.payload)\n      };\n    case ACTION_TYPES.LOGOUT:\n      localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Context provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Load user preferences from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(STORAGE_KEYS.THEME);\n    if (savedTheme) {\n      dispatch({\n        type: ACTION_TYPES.SET_THEME,\n        payload: savedTheme\n      });\n    }\n    const authToken = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\n    if (authToken) {\n      // Validate token and set user if valid\n      // This would typically involve an API call\n      dispatch({\n        type: ACTION_TYPES.SET_AUTHENTICATED,\n        payload: true\n      });\n    }\n  }, []);\n\n  // Action creators\n  const actions = {\n    setUser: user => {\n      dispatch({\n        type: ACTION_TYPES.SET_USER,\n        payload: user\n      });\n    },\n    setAuthenticated: isAuthenticated => {\n      dispatch({\n        type: ACTION_TYPES.SET_AUTHENTICATED,\n        payload: isAuthenticated\n      });\n    },\n    setServerStatus: status => {\n      dispatch({\n        type: ACTION_TYPES.SET_SERVER_STATUS,\n        payload: status\n      });\n    },\n    setEvents: events => {\n      dispatch({\n        type: ACTION_TYPES.SET_EVENTS,\n        payload: events\n      });\n    },\n    setChangelogs: changelogs => {\n      dispatch({\n        type: ACTION_TYPES.SET_CHANGELOGS,\n        payload: changelogs\n      });\n    },\n    setLoading: loading => {\n      dispatch({\n        type: ACTION_TYPES.SET_LOADING,\n        payload: loading\n      });\n    },\n    setError: error => {\n      dispatch({\n        type: ACTION_TYPES.SET_ERROR,\n        payload: error\n      });\n    },\n    clearError: () => {\n      dispatch({\n        type: ACTION_TYPES.CLEAR_ERROR\n      });\n    },\n    setTheme: theme => {\n      localStorage.setItem(STORAGE_KEYS.THEME, theme);\n      dispatch({\n        type: ACTION_TYPES.SET_THEME,\n        payload: theme\n      });\n    },\n    addNotification: notification => {\n      const id = Date.now().toString();\n      dispatch({\n        type: ACTION_TYPES.ADD_NOTIFICATION,\n        payload: {\n          ...notification,\n          id\n        }\n      });\n\n      // Auto-remove notification after 5 seconds\n      setTimeout(() => {\n        dispatch({\n          type: ACTION_TYPES.REMOVE_NOTIFICATION,\n          payload: id\n        });\n      }, 5000);\n    },\n    removeNotification: id => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_NOTIFICATION,\n        payload: id\n      });\n    },\n    logout: () => {\n      dispatch({\n        type: ACTION_TYPES.LOGOUT\n      });\n    }\n  };\n  const value = {\n    state,\n    actions\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use the context\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","STORAGE_KEYS","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","serverStatus","online","playerCount","maxPlayers","events","changelogs","loading","error","theme","notifications","ACTION_TYPES","SET_USER","SET_AUTHENTICATED","SET_SERVER_STATUS","SET_EVENTS","SET_CHANGELOGS","SET_LOADING","SET_ERROR","CLEAR_ERROR","SET_THEME","ADD_NOTIFICATION","REMOVE_NOTIFICATION","LOGOUT","appReducer","state","action","type","payload","filter","notification","id","localStorage","removeItem","AUTH_TOKEN","AppContext","AppProvider","children","_s","dispatch","savedTheme","getItem","THEME","authToken","actions","setUser","setAuthenticated","setServerStatus","status","setEvents","setChangelogs","setLoading","setError","clearError","setTheme","setItem","addNotification","Date","now","toString","setTimeout","removeNotification","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/owner/Desktop/Programming/TOB-site/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { STORAGE_KEYS } from '../utils/constants';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  serverStatus: {\r\n    online: true,\r\n    playerCount: 0,\r\n    maxPlayers: 100,\r\n  },\r\n  events: [],\r\n  changelogs: [],\r\n  loading: false,\r\n  error: null,\r\n  theme: 'dark',\r\n  notifications: [],\r\n};\r\n\r\n// Action types\r\nexport const ACTION_TYPES = {\r\n  SET_USER: 'SET_USER',\r\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\r\n  SET_SERVER_STATUS: 'SET_SERVER_STATUS',\r\n  SET_EVENTS: 'SET_EVENTS',\r\n  SET_CHANGELOGS: 'SET_CHANGELOGS',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_ERROR: 'SET_ERROR',\r\n  CLEAR_ERROR: 'CLEAR_ERROR',\r\n  SET_THEME: 'SET_THEME',\r\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\r\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\r\n  LOGOUT: 'LOGOUT',\r\n};\r\n\r\n// Reducer function\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: !!action.payload,\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload,\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_SERVER_STATUS:\r\n      return {\r\n        ...state,\r\n        serverStatus: { ...state.serverStatus, ...action.payload },\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: action.payload,\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_CHANGELOGS:\r\n      return {\r\n        ...state,\r\n        changelogs: action.payload,\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    \r\n    case ACTION_TYPES.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.payload,\r\n      };\r\n    \r\n    case ACTION_TYPES.ADD_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, action.payload],\r\n      };\r\n    \r\n    case ACTION_TYPES.REMOVE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          (notification) => notification.id !== action.payload\r\n        ),\r\n      };\r\n    \r\n    case ACTION_TYPES.LOGOUT:\r\n      localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AppContext = createContext();\r\n\r\n// Context provider component\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  // Load user preferences from localStorage on mount\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem(STORAGE_KEYS.THEME);\r\n    if (savedTheme) {\r\n      dispatch({ type: ACTION_TYPES.SET_THEME, payload: savedTheme });\r\n    }\r\n\r\n    const authToken = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\r\n    if (authToken) {\r\n      // Validate token and set user if valid\r\n      // This would typically involve an API call\r\n      dispatch({ type: ACTION_TYPES.SET_AUTHENTICATED, payload: true });\r\n    }\r\n  }, []);\r\n\r\n  // Action creators\r\n  const actions = {\r\n    setUser: (user) => {\r\n      dispatch({ type: ACTION_TYPES.SET_USER, payload: user });\r\n    },\r\n\r\n    setAuthenticated: (isAuthenticated) => {\r\n      dispatch({ type: ACTION_TYPES.SET_AUTHENTICATED, payload: isAuthenticated });\r\n    },\r\n\r\n    setServerStatus: (status) => {\r\n      dispatch({ type: ACTION_TYPES.SET_SERVER_STATUS, payload: status });\r\n    },\r\n\r\n    setEvents: (events) => {\r\n      dispatch({ type: ACTION_TYPES.SET_EVENTS, payload: events });\r\n    },\r\n\r\n    setChangelogs: (changelogs) => {\r\n      dispatch({ type: ACTION_TYPES.SET_CHANGELOGS, payload: changelogs });\r\n    },\r\n\r\n    setLoading: (loading) => {\r\n      dispatch({ type: ACTION_TYPES.SET_LOADING, payload: loading });\r\n    },\r\n\r\n    setError: (error) => {\r\n      dispatch({ type: ACTION_TYPES.SET_ERROR, payload: error });\r\n    },\r\n\r\n    clearError: () => {\r\n      dispatch({ type: ACTION_TYPES.CLEAR_ERROR });\r\n    },\r\n\r\n    setTheme: (theme) => {\r\n      localStorage.setItem(STORAGE_KEYS.THEME, theme);\r\n      dispatch({ type: ACTION_TYPES.SET_THEME, payload: theme });\r\n    },\r\n\r\n    addNotification: (notification) => {\r\n      const id = Date.now().toString();\r\n      dispatch({\r\n        type: ACTION_TYPES.ADD_NOTIFICATION,\r\n        payload: { ...notification, id },\r\n      });\r\n\r\n      // Auto-remove notification after 5 seconds\r\n      setTimeout(() => {\r\n        dispatch({ type: ACTION_TYPES.REMOVE_NOTIFICATION, payload: id });\r\n      }, 5000);\r\n    },\r\n\r\n    removeNotification: (id) => {\r\n      dispatch({ type: ACTION_TYPES.REMOVE_NOTIFICATION, payload: id });\r\n    },\r\n\r\n    logout: () => {\r\n      dispatch({ type: ACTION_TYPES.LOGOUT });\r\n    },\r\n  };\r\n\r\n  const value = {\r\n    state,\r\n    actions,\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AppContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}